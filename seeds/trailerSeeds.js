const mongoose = require('mongoose');
const Trailer = require('../models/Trailer');
const { createSlug } = require('../utils/slugify');
const dotenv = require('dotenv');

// Load environment variables
dotenv.config();

// Sample trailer data for seeding
const trailerData = [
    {
        name: "–ü—Ä–∏—á—ñ–ø –ª–µ–≥–∫–æ–≤–∏–π –ö—Ä–µ–º–µ–Ω—å –ü–õ-2",
        description: "<p>–ù–∞–¥—ñ–π–Ω–∏–π –ª–µ–≥–∫–æ–≤–∏–π –ø—Ä–∏—á—ñ–ø –¥–ª—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç—É–≤–∞–Ω–Ω—è —Ä—ñ–∑–Ω–æ–º–∞–Ω—ñ—Ç–Ω–∏—Ö –≤–∞–Ω—Ç–∞–∂—ñ–≤. –û—Å–Ω–∞—â–µ–Ω–∏–π —Ä–µ—Å–æ—Ä–Ω–æ—é –ø—ñ–¥–≤—ñ—Å–∫–æ—é —Ç–∞ –ø–æ—Å–∏–ª–µ–Ω–æ—é —Ä–∞–º–æ—é.</p>",
        shortDescription: "–õ–µ–≥–∫–æ–≤–∏–π –ø—Ä–∏—á—ñ–ø –∑ —Ä–µ—Å–æ—Ä–Ω–æ—é –ø—ñ–¥–≤—ñ—Å–∫–æ—é.",
        brand: "–ö—Ä–µ–º–µ–Ω—å",
        model: "–ü–õ-2",
        category: "–õ–µ–≥–∫–æ–≤—ñ –ø—Ä–∏—á–µ–ø–∏",
        price: 35000,
        currency: "UAH",
        inStock: true,
        quantity: 5,
        images: [
            "https://example.com/images/kremen-pl2-main.jpg",
            "https://example.com/images/kremen-pl2-side.jpg",
            "https://example.com/images/kremen-pl2-interior.jpg"
        ],
        specifications: [
            { name: "–í–∞–Ω—Ç–∞–∂–æ–ø—ñ–¥–π–æ–º–Ω—ñ—Å—Ç—å", value: "750", unit: "–∫–≥" },
            { name: "–î–æ–≤–∂–∏–Ω–∞ –∫—É–∑–æ–≤–∞", value: "2000", unit: "–º–º" },
            { name: "–®–∏—Ä–∏–Ω–∞ –∫—É–∑–æ–≤–∞", value: "1200", unit: "–º–º" },
            { name: "–í–∏—Å–æ—Ç–∞ –±–æ—Ä—Ç—É", value: "400", unit: "–º–º" },
            { name: "–¢–∏–ø –ø—ñ–¥–≤—ñ—Å–∫–∏", value: "–†–µ—Å–æ—Ä–Ω–∞" },
            { name: "–ö–æ–ª—ñ—Å–Ω–∞ —Ñ–æ—Ä–º—É–ª–∞", value: "1R" }
        ],
        metaTitle: "–ö—É–ø–∏—Ç–∏ –ª–µ–≥–∫–æ–≤–∏–π –ø—Ä–∏—á—ñ–ø –ö—Ä–µ–º–µ–Ω—å –ü–õ-2 –≤ –£–∫—Ä–∞—ó–Ω—ñ",
        metaDescription: "–î–µ—Ç–∞–ª—å–Ω–∏–π –æ–ø–∏—Å —Ç–∞ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –ø—Ä–∏—á–µ–ø–∞ –ö—Ä–µ–º–µ–Ω—å –ü–õ-2. –î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –£–∫—Ä–∞—ó–Ω—ñ.",
        keywords: ["–ø—Ä–∏—á—ñ–ø", "–ª–µ–≥–∫–æ–≤–∏–π –ø—Ä–∏—á—ñ–ø", "–ö—Ä–µ–º–µ–Ω—å", "–ü–õ-2", "–∫—É–ø–∏—Ç–∏ –ø—Ä–∏—á—ñ–ø"],
        isFeatured: true
    },
    {
        name: "–ü—Ä–∏—á—ñ–ø –≤–∞–Ω—Ç–∞–∂–Ω–∏–π –ë–£–°-3500",
        description: "<p>–ú—ñ—Ü–Ω–∏–π –≤–∞–Ω—Ç–∞–∂–Ω–∏–π –ø—Ä–∏—á—ñ–ø –¥–ª—è –ø–µ—Ä–µ–≤–µ–∑–µ–Ω–Ω—è –≤–∞–∂–∫–∏—Ö –≤–∞–Ω—Ç–∞–∂—ñ–≤. –ú–∞—î –ø—ñ–¥—Å–∏–ª–µ–Ω—É —Ä–∞–º—É —Ç–∞ –Ω–∞–¥—ñ–π–Ω—É –≥–∞–ª—å–º—ñ–≤–Ω—É —Å–∏—Å—Ç–µ–º—É.</p>",
        shortDescription: "–í–∞–Ω—Ç–∞–∂–Ω–∏–π –ø—Ä–∏—á—ñ–ø –ø—ñ–¥–≤–∏—â–µ–Ω–æ—ó –≤–∞–Ω—Ç–∞–∂–æ–ø—ñ–¥–π–æ–º–Ω–æ—Å—Ç—ñ.",
        brand: "–ë–£–°",
        model: "3500",
        category: "–í–∞–Ω—Ç–∞–∂–Ω—ñ –ø—Ä–∏—á–µ–ø–∏",
        price: 85000,
        currency: "UAH",
        inStock: true,
        quantity: 3,
        images: [
            "https://example.com/images/bus-3500-main.jpg",
            "https://example.com/images/bus-3500-side.jpg"
        ],
        specifications: [
            { name: "–í–∞–Ω—Ç–∞–∂–æ–ø—ñ–¥–π–æ–º–Ω—ñ—Å—Ç—å", value: "3500", unit: "–∫–≥" },
            { name: "–î–æ–≤–∂–∏–Ω–∞ –∫—É–∑–æ–≤–∞", value: "4000", unit: "–º–º" },
            { name: "–®–∏—Ä–∏–Ω–∞ –∫—É–∑–æ–≤–∞", value: "2000", unit: "–º–º" },
            { name: "–í–∏—Å–æ—Ç–∞ –±–æ—Ä—Ç—É", value: "600", unit: "–º–º" },
            { name: "–¢–∏–ø –ø—ñ–¥–≤—ñ—Å–∫–∏", value: "–†–µ—Å–æ—Ä–Ω–∞ –∑ –∞–º–æ—Ä—Ç–∏–∑–∞—Ç–æ—Ä–∞–º–∏" },
            { name: "–ö–æ–ª—ñ—Å–Ω–∞ —Ñ–æ—Ä–º—É–ª–∞", value: "2R" }
        ],
        metaTitle: "–í–∞–Ω—Ç–∞–∂–Ω–∏–π –ø—Ä–∏—á—ñ–ø –ë–£–°-3500 - –∫—É–ø–∏—Ç–∏ –≤ –£–∫—Ä–∞—ó–Ω—ñ",
        metaDescription: "–ù–∞–¥—ñ–π–Ω–∏–π –≤–∞–Ω—Ç–∞–∂–Ω–∏–π –ø—Ä–∏—á—ñ–ø –ë–£–°-3500 –∑ –≤–∞–Ω—Ç–∞–∂–æ–ø—ñ–¥–π–æ–º–Ω—ñ—Å—Ç—é 3,5 —Ç–æ–Ω–Ω–∏.",
        keywords: ["–≤–∞–Ω—Ç–∞–∂–Ω–∏–π –ø—Ä–∏—á—ñ–ø", "–ë–£–°", "3500 –∫–≥", "–ø—Ä–∏—á—ñ–ø –¥–ª—è –≤–∞–Ω—Ç–∞–∂—ñ–≤"],
        isFeatured: true
    },
    {
        name: "–ü—Ä–∏—á—ñ–ø –¥–ª—è —á–æ–≤–Ω—ñ–≤ –ê–∫–≤–∞–¢—Ä–∞–Ω—Å –ú-500",
        description: "<p>–°–ø–µ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π –ø—Ä–∏—á—ñ–ø –¥–ª—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç—É–≤–∞–Ω–Ω—è —á–æ–≤–Ω—ñ–≤ —Ç–∞ –≤–æ–¥–Ω–æ–≥–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç—É. –ú–∞—î —Ä–µ–≥—É–ª—å–æ–≤–∞–Ω—ñ —Ä–æ–ª–∏–∫–∏ —Ç–∞ –Ω–∞–¥—ñ–π–Ω—É —Å–∏—Å—Ç–µ–º—É –∫—Ä—ñ–ø–ª–µ–Ω–Ω—è.</p>",
        shortDescription: "–ü—Ä–∏—á—ñ–ø –¥–ª—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç—É–≤–∞–Ω–Ω—è —á–æ–≤–Ω—ñ–≤.",
        brand: "–ê–∫–≤–∞–¢—Ä–∞–Ω—Å",
        model: "–ú-500",
        category: "–ü—Ä–∏—á–µ–ø–∏ –¥–ª—è —á–æ–≤–Ω—ñ–≤",
        price: 28000,
        currency: "UAH",
        inStock: true,
        quantity: 8,
        images: [
            "https://example.com/images/aquatrans-m500-main.jpg"
        ],
        specifications: [
            { name: "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ –¥–æ–≤–∂–∏–Ω–∞ —á–æ–≤–Ω–∞", value: "5000", unit: "–º–º" },
            { name: "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ –≤–∞–≥–∞ —á–æ–≤–Ω–∞", value: "500", unit: "–∫–≥" },
            { name: "–®–∏—Ä–∏–Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∏", value: "1800", unit: "–º–º" },
            { name: "–¢–∏–ø —Ä–æ–ª–∏–∫—ñ–≤", value: "–†–µ–≥—É–ª—å–æ–≤–∞–Ω—ñ" },
            { name: "–ú–∞—Ç–µ—Ä—ñ–∞–ª —Ä–∞–º–∏", value: "–û—Ü–∏–Ω–∫–æ–≤–∞–Ω–∞ —Å—Ç–∞–ª—å" }
        ],
        metaTitle: "–ü—Ä–∏—á—ñ–ø –¥–ª—è —á–æ–≤–Ω—ñ–≤ –ê–∫–≤–∞–¢—Ä–∞–Ω—Å –ú-500",
        metaDescription: "–°–ø–µ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π –ø—Ä–∏—á—ñ–ø –¥–ª—è —á–æ–≤–Ω—ñ–≤ –∑ —Ä–µ–≥—É–ª—å–æ–≤–∞–Ω–∏–º–∏ —Ä–æ–ª–∏–∫–∞–º–∏.",
        keywords: ["–ø—Ä–∏—á—ñ–ø –¥–ª—è —á–æ–≤–Ω—ñ–≤", "–ê–∫–≤–∞–¢—Ä–∞–Ω—Å", "—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç —á–æ–≤–Ω—ñ–≤", "–≤–æ–¥–Ω–∏–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç"],
        isFeatured: false
    }
];

// Connect to database and seed data
const seedDatabase = async () => {
    try {
        // Connect to MongoDB
        const mongoURI = process.env.MONGODB_URI || 'mongodb://localhost:27017/trailer_store';
        await mongoose.connect(mongoURI, {
            useNewUrlParser: true,
            useUnifiedTopology: true,
        });

        console.log('üì° Connected to MongoDB for seeding...');

        // Clear existing data
        await Trailer.deleteMany({});
        console.log('üóëÔ∏è  Cleared existing trailer data');

        // Generate slugs for each trailer
        const trailersWithSlugs = trailerData.map(trailer => ({
            ...trailer,
            slug: createSlug(trailer.name)
        }));

        // Insert new data
        const trailers = await Trailer.insertMany(trailersWithSlugs);
        console.log(`‚úÖ Successfully seeded ${trailers.length} trailers`);

        // Display seeded trailers
        trailers.forEach((trailer, index) => {
            console.log(`${index + 1}. ${trailer.name} (${trailer.slug})`);
        });

        console.log('\nüéâ Database seeding completed successfully!');
        process.exit(0);

    } catch (error) {
        console.error('‚ùå Error seeding database:', error);
        process.exit(1);
    }
};

// Run seeding if this file is executed directly
if (require.main === module) {
    console.log('üå± Starting database seeding...');
    seedDatabase();
}

module.exports = {
    seedDatabase,
    trailerData
};
